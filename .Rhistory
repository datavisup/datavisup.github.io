install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
iris
mtcars
colMeans(iris)
colMeans(iris[,1:4])
library(data.table)
res=iris[,m=mean(Sepal.Length),by=Species]
res=data.table(iris)[,m=mean(Sepal.Length),by=Species]
data.table(iris)
res=data.table(iris)[,m=mean(iris$Sepal.Length),by=Species]
data=data.table(iris)
res=data[,m=mean(Sepal.Length),by=Species]
data
res=data[,.(m=mean(Sepal.Length)),by=Species]
res
barplot(res)
?barplot()
barplot(res$m)
?barplot()
barplot(res$m,xlab=res$Species)
?barplot()
barplot(res$m,names.arg=res$Species)
barplot(res$m,names.arg=res$Species,
main="Longueur des sépales")
barplot(res$m,names.arg=res$Species,
main="Longueurs moyennes des sépales en fonction des espèces")
library(ggplot2)
p <- ggplot(iris, aes(Species, Sepal.Length))
p + geom_violin()
p <- ggplot(iris, aes(Species, Sepal.Length))
p + geom_boxplot()
diamonds
head(diamonds)
pie(table(diamonds$cut),
+   col=colors)
pie(table(diamonds$cut))
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
cxc + coord_polar()
library(plotly)
p=cxc + coord_polar()
ggplotly(p)
p <- ggplot(iris, aes(Species, Sepal.Length))
p=p + geom_boxplot()
ggplotly(p)
p <- ggplot(iris, aes(Species, Sepal.Length))+ geom_boxplot()
ggplotly(p)
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
p=cxc + coord_polar()
p
ggplotly(p)
library(data.table)
library(ggplot2)
library(plotly)
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position = "fill")
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
pie(table(diamonds$cut))
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
p=cxc + coord_polar()
p
library(ggvis)
install.packages("ggvis")
install.packages("googleVis")
library(ggvis)
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points()
Scatter <- gvisScatterChart(women,
options=list(
legend="none",
lineWidth=0, pointSize=3,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}",
width=300, height=300))
plot(Scatter)
library(googleVis)
Scatter <- gvisScatterChart(women,
options=list(
legend="none",
lineWidth=0, pointSize=3,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}",
width=300, height=300))
plot(Scatter)
install.packages(c("ggplot2","plotly"),dependencies=TRUE)
install.packages(c("DT","evir","VGAM","dygraphs"),dependencies=TRUE)
sigma=seq(0.01,5,0.01)
rho=1
plot(sigma,exp(0.5)*exp(sigma^2/2)*(exp(rho*sigma)-1)/sqrt((exp(1)-1)*exp(1)*exp(sigma^2)*(exp(sigma^2)-1)),ylim=c(-1,1),type="l",xlab=expression(sigma),ylab="corr?lation lin?aire",main=expression("Bornes de la corrélation linéaire entre LN(0,1) et LN(0,"*sigma*")"))
legend(2.5,0.9,c("Corrélation maximum","Corrélation minimum"),col=c(1,2),lty=1,lwd=1,bty = "n")
rho=-1
lines(sigma,exp(0.5)*exp(sigma^2/2)*(exp(rho*sigma)-1)/sqrt((exp(1)-1)*exp(1)*exp(sigma^2)*(exp(sigma^2)-1)),col=2)
install.packages("GGally")
install.packages("scatterplot3d")
install.packages("party")
require(latticeExtra)
install.packages(c("latticeExtra","quantmod","PerformanceAnalytics","xtsExtra","rCharts"),dependencies=TRUE)
d <- density(iris[,1])
plot(d, type="n", main="Densité")
polygon(d, col="lightgray", border="gray")
rug(iris[,1], col="red")
library(MASS)
m <- 3
n <- 2000
sigma <- matrix(c(1, 0.4, 0.2,
0.4, 1, -0.8,
0.2, -0.8, 1),
nrow=3)
z <- mvrnorm(n,mu=rep(0, m),Sigma=sigma,empirical=T)
library(psych)
cor(z,method='spearman')
pairs.panels(z)
u <- pnorm(z)
pairs.panels(u)
x1 <- qgamma(u[,1],shape=2,scale=1)
x2 <- qbeta(u[,2],2,2)
x3 <- qt(u[,3],df=5)
plot3d(x1,x2,x3,pch=20,col='blue')
library(rgl)
plot3d(u[,1],u[,2],u[,3],pch=20,col='navyblue')
plot3d(x1,x2,x3,pch=20,col='blue')
install.packages("knitr")
install.packages("rmarkdown")
install.packages("ggvis")
install.packages("googleVis")
install.packages("GGally")
install.packages("scatterplot3d")
install.packages("party")
install.packages("rmarkdown")
install.packages("googleVis")
install.packages("rmarkdown")
install.packages("GGally")
install.packages("scatterplot3d")
install.packages("party")
diamonds
library(ggplot2)
library(data.table)
diamonds
head(diamonds)
install.packages("tabplot")
manaus
library(boot)
manaus
plot(manaus$Jan)
typeof(manaus)
plot(manaus$[,1])
plot(manaus[,1])
manaus[,1]
dim(manaus)
typeof(manaus)
names(manaus)
str(manaus)
plot(manaus)
decompose(manaus)
plot(decompose(manaus))
ggplot(wfDF, aes(category, fill = sign)) +
geom_rect(aes(x = category, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_y_continuous(labels = percent) +
scale_x_discrete("", breaks = levels(wfDF$category), labels = gsub(" ", "\n", levels(wfDF$category)))
data=data.frame(label=seq(1,8,1),
x=rnorm(8,10,3))
seed(12)
data=data.frame(label=seq(1,8,1),
x=rnorm(8,10,3))
data
diff(data)
diff(data$x)
df=c(data$x[1],diff(data$x),data$x[length(x)])
df=c(data$x[1],diff(data$x),data$x[rnow(data)])
df=c(data$x[1],diff(data$x),data$x[nrow(data)])
df
sign(df)
df$end=cumsum(df)
df=data.frame(amount=c(data$x[1],diff(data$x),data$x[nrow(data)])
df=data.frame(amount=c(data$x[1],diff(data$x),data$x[nrow(data)]))
df=data.frame(amount=c(data$x[1],diff(data$x),data$x[nrow(data)]))
df
df$sgine=sign(df)
df$end=cumsum(df$amount)
df
df$end[rnow]=0
df$start[nrow]=c(0,df$end[-nrow])
df$end[-nrow]
df$end
df$start[nrow]=c(0,df$end[-nrowd(df)])
df$start[nrow]=c(0,df$end[-nrow(df)])
df
nrow(df)
df$end[-nrow(df)]
df$start[nrow]=c(0,df$end[-nrow(df)])
c(0,df$end[-nrow(df)])
df$start=c(0,df$end[-nrow(df)])
df
df$s=sign(df$amount)
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = category, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_y_continuous(labels = percent) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = category, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_y_continuous(labels = amount) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
df
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = category, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
df
df$label=c(data$label,"final")
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
df$id=seq_along(df$amount)
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
df
df$end[nrow]=0
df$end[nrow(df)]=0
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))
df
ggplot(df, aes(label, fill = s)) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))+
scale_fill_manual(values = c("red","blue"))
ggplot(df, aes(label, fill = as.factor(s))) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = gsub(" ", "\n", levels(df$label)))+
scale_fill_manual(values = c("red","blue"))
ggplot(df, aes(label, fill = as.factor(s))) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_x_discrete("", breaks = levels(df$label), labels = levels(df$label))+
scale_fill_manual(values = c("red","blue"))
df$label
ggplot(df, aes(label, fill = as.factor(s))) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_fill_manual(values = c("red","blue"))
df=data.frame(montant=c(data$x[1],diff(data$x),data$x[nrow(data)]))
df$s=sign(df$montant)
df$end=cumsum(df$montant)
df$end[nrow(df)]=0
df$start=c(0,df$end[-nrow(df)])
df$label=c(data$label,"final")
df$id=seq_along(df$montant)
ggplot(df, aes(label, fill = as.factor(s))) +
geom_rect(aes(x = label, xmin = id - 0.475, xmax = id + 0.475, ymin = end, ymax = start)) +
scale_fill_manual(values = c("red","blue"))
library(sunburstR)
devtools::install_github("timelyportfolio/sunburstR")
diamonds
head(diamonds)
d1=data.table(cut=gsub("-","_",as.character(diamonds$cut)),
clarity=gsub("-","_",as.character(diamonds$clarity)),
color=gsub("-","_",as.character(diamonds$color)),f=1)
d1$label=paste(d1$cut,d1$clarity,d1$color,sep="-")
agg=aggregate(f~label,data=d1,sum)
sb=sunburst(agg,legend = list(w=200,h=20))
library(sunburstR)
sb=sunburst(agg,legend = list(w=200,h=20))
sb
library(plotyly)
library(plotly)
ggplot(diamonds, aes(carat)) +
geom_histogram()
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
geom_density(alpha = 0.1) +
xlim(55, 70)
ggplot(diamonds, aes(carat, ..count.., fill = cut)) +
geom_density(position = "fill")
install.packages("beeswarm")
ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +
geom_density(alpha = 0.1) +
xlim(55, 70)
ggplot(diamonds, aes(price, fill = cut)) +
geom_histogram(binwidth = 500)
install.packages("threejs")
p + geom_line(aes(colour = rating)) + scale_colour_gradient(low="red")
head(economics)
a <- ggplot(data = economics, aes(x = date, y = unemploy))
a <- a + geom_line()
a
head(midwest)
str(midwest)
str(economics)
str(mpg)
str(msleep)
str(presidential)
str(seals)
start <- as.Date('2013-11-28')
today <- as.Date('2015-03-04')
all_days <- seq(start, today, by = 'day')
year <- as.POSIXlt(all_days)$year + 1900
urls <- paste0('http://cran-logs.rstudio.com/', year, '/', all_days, '.csv.gz')
urls
mcor <- cor(mtcars)
mcor
mcor <- cor(mtcars)
mcor
library(corrplot)
corrplot(mcor, type="upper", order="hclust", tl.col="black", tl.srt=45)
install.packages("corrplot")
library(corrplot)
corrplot(mcor, type="upper", order="hclust", tl.col="black", tl.srt=45)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
mydata <- mtcars[, c(1,3,4,5,6,7)]
chart.Correlation(mydata, histogram=TRUE, pch=19)
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = mcor, col = col, symm = TRUE)
install.packages("rdatamarket")
install.packages("portfolio")
install.packages("treemap")
install.packages("Ecdat")
install.packages("evir")
library(MASS)
head(Insurance)
library(Ecdat)
head(HI)
head(Mofa)
library(evir)
data(danish)
head(danish)
ggplot(data=HI,aes(education,experience))+gem_point()
library(plotly)
library(ggplot2)
ggplot(data=HI,aes(education,experience))+gem_point()
ggplot(data=HI,aes(education,experience))+geom_point()
ggplot(data=HI,aes(education,experience))+geom_jitter()
HI
head(HI)
ggplot(data=HI,aes(education,kidslt6))+geom_jitter()
ggplot(data=HI,aes(education,kidslt6),color=race)+geom_jitter()
ggplot(data=HI,aes(education,kidslt6,color=race))+geom_jitter()
boston
head(Boston)
head(insurance)
head(Insurance)
ggplot(data=Insurance,aes(Age,Holders,color=District))+geom_jitter()
plotly(p)
ggplotly(p)
p=ggplot(data=Insurance,aes(Age,Holders,color=District))+geom_jitter()
ggplotly(p)
