install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
iris
mtcars
colMeans(iris)
colMeans(iris[,1:4])
library(data.table)
res=iris[,m=mean(Sepal.Length),by=Species]
res=data.table(iris)[,m=mean(Sepal.Length),by=Species]
data.table(iris)
res=data.table(iris)[,m=mean(iris$Sepal.Length),by=Species]
data=data.table(iris)
res=data[,m=mean(Sepal.Length),by=Species]
data
res=data[,.(m=mean(Sepal.Length)),by=Species]
res
barplot(res)
?barplot()
barplot(res$m)
?barplot()
barplot(res$m,xlab=res$Species)
?barplot()
barplot(res$m,names.arg=res$Species)
barplot(res$m,names.arg=res$Species,
main="Longueur des sépales")
barplot(res$m,names.arg=res$Species,
main="Longueurs moyennes des sépales en fonction des espèces")
library(ggplot2)
p <- ggplot(iris, aes(Species, Sepal.Length))
p + geom_violin()
p <- ggplot(iris, aes(Species, Sepal.Length))
p + geom_boxplot()
diamonds
head(diamonds)
pie(table(diamonds$cut),
+   col=colors)
pie(table(diamonds$cut))
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
cxc + coord_polar()
library(plotly)
p=cxc + coord_polar()
ggplotly(p)
p <- ggplot(iris, aes(Species, Sepal.Length))
p=p + geom_boxplot()
ggplotly(p)
p <- ggplot(iris, aes(Species, Sepal.Length))+ geom_boxplot()
ggplotly(p)
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
p=cxc + coord_polar()
p
ggplotly(p)
library(data.table)
library(ggplot2)
library(plotly)
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar(position = "fill")
ggplot(diamonds, aes(clarity, fill=cut)) + geom_bar()
pie(table(diamonds$cut))
cxc <- ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(width = 1, colour = "black")
p=cxc + coord_polar()
p
library(ggvis)
install.packages("ggvis")
install.packages("googleVis")
library(ggvis)
mtcars %>% ggvis(~wt, ~mpg) %>% layer_points()
Scatter <- gvisScatterChart(women,
options=list(
legend="none",
lineWidth=0, pointSize=3,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}",
width=300, height=300))
plot(Scatter)
library(googleVis)
Scatter <- gvisScatterChart(women,
options=list(
legend="none",
lineWidth=0, pointSize=3,
title="Women", vAxis="{title:'weight (lbs)'}",
hAxis="{title:'height (in)'}",
width=300, height=300))
plot(Scatter)
install.packages(c("ggplot2","plotly"),dependencies=TRUE)
install.packages(c("DT","evir","VGAM","dygraphs"),dependencies=TRUE)
sigma=seq(0.01,5,0.01)
rho=1
plot(sigma,exp(0.5)*exp(sigma^2/2)*(exp(rho*sigma)-1)/sqrt((exp(1)-1)*exp(1)*exp(sigma^2)*(exp(sigma^2)-1)),ylim=c(-1,1),type="l",xlab=expression(sigma),ylab="corr?lation lin?aire",main=expression("Bornes de la corrélation linéaire entre LN(0,1) et LN(0,"*sigma*")"))
legend(2.5,0.9,c("Corrélation maximum","Corrélation minimum"),col=c(1,2),lty=1,lwd=1,bty = "n")
rho=-1
lines(sigma,exp(0.5)*exp(sigma^2/2)*(exp(rho*sigma)-1)/sqrt((exp(1)-1)*exp(1)*exp(sigma^2)*(exp(sigma^2)-1)),col=2)
install.packages("GGally")
install.packages("scatterplot3d")
install.packages("party")
require(latticeExtra)
install.packages(c("latticeExtra","quantmod","PerformanceAnalytics","xtsExtra","rCharts"),dependencies=TRUE)
d <- density(iris[,1])
plot(d, type="n", main="Densité")
polygon(d, col="lightgray", border="gray")
rug(iris[,1], col="red")
